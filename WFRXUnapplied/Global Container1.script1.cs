using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Windows.Forms;
using System.Xml;
using Excel = Microsoft.Office.Interop.Excel;
using System.Text.RegularExpressions;

namespace Dynamic.Script_8DB93678C243637
{
	// Script generated by Pega Robot Studio 19.1.118.0
	// Please use caution when modifying class name, namespace or attributes
	[OpenSpan.TypeManagement.DynamicTypeAttribute()]
	[OpenSpan.Design.ComponentIdentityAttribute("Script-8DB93678C243637")]
	public sealed class Script
	{
		public bool ExecuteCommand(string command){
			try {
				System.Diagnostics.Process.Start(command);
				return true;
			}
			catch (InvalidCastException e) {
				return false;
			}

        }

				public string CleanStoreNum(string storeNum){
			storeNum = "0" + storeNum.Substring(0,3);
			return storeNum;
		}

		public void FormatExcel(Excel.Workbook excelDoc){
			Excel.Worksheet WS;
			WS = (Excel.Worksheet)excelDoc.Worksheets[1];
			Microsoft.Office.Interop.Excel.Range cells = WS.Cells;
			cells.NumberFormat = "@";
		}

		public bool CheckValues(string first, string second){
			if(first.StartsWith("(")){
                first = first.Replace("(","");
                first = first.Replace(")","");
            }
            if(second.StartsWith("(")){
                second = second.Replace("(","");
                second = second.Replace(")","");
            }
            if(!second.Contains(".")){
                second = second + ".00";
            } else if(second.Contains(".")){
                if(Regex.IsMatch(second,"\\d+.\\d$")){ //is there only one decimal point, if so add a zero to make it in currency format
                    second = second + "0";
                }
            }

            if(first == second){
                return true;
            }
            else{
                return false;
            }
		}

	}
}
